#Test to see if Scenario A has been simulated correctly
"""
pvalues_scenarioA <- numeric(15000)

for (i in 1:15000) {
  control_A <- rnorm_multi(
    n=20,vars=2,mu=c(0,0),sd=c(1,1),
    r=0.5,varnames=c("Control1","Control2"))
  exp_A <- rnorm_multi(
    n=20,vars=2,mu=c(0,0),sd=c(1,1),
    r=0.5,varnames = c("Dependent1", "Dependent2"))
  result1 <- t.test(control_A$Control1,exp_A$Dependent1,var.equal = TRUE)
  result2 <- t.test(control_A$Control2,exp_A$Dependent2,var.equal = TRUE)
  result3 <- t.test(
    rowMeans(cbind(control_A$Control1, control_A$Control2)),
    rowMeans(cbind(exp_A$Dependent1, exp_A$Dependent2)),
    var.equal = TRUE)
  pvalues_scenarioA[i] <- min(
    c(result1$p.value,result2$p.value,result3$p.value))
}

#Proportions of p-values less than 0.1, 0.05, 0.01 are consistent
#with Simmons, Nelson, & Simonsohn, 2011
pvalues_point1 <- pvalues_scenarioA[pvalues_scenarioA < 0.1]
prop_point1 <- (length(pvalues_point1)/15000)*100

pvalues_point05 <- pvalues_scenarioA[pvalues_scenarioA < 0.05]
prop_point05 <- (length(pvalues_point05)/15000)*100

pvalues_point01 <- pvalues_scenarioA[pvalues_scenarioA < 0.01]
prop_point01 <- (length(pvalues_point01)/15000)*100
"""